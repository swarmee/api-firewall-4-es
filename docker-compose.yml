version: '3.8'
services:
  api-firewall:
    container_name: api-firewall
    image: wallarm/api-firewall:latest
    restart: on-failure
    environment:
      APIFW_URL: "http://0.0.0.0:8080"
      APIFW_API_SPECS: "/opt/resources/openapi.json"
      APIFW_SERVER_URL: "http://es8:9200"
      APIFW_SERVER_MAX_CONNS_PER_HOST: "32"
      APIFW_SERVER_READ_TIMEOUT: "30s"
      APIFW_SERVER_WRITE_TIMEOUT: "30s"
      APIFW_SERVER_DIAL_TIMEOUT: "8s"
      APIFW_REQUEST_VALIDATION: "LOG_ONLY" ## BLOCK
      APIFW_RESPONSE_VALIDATION: "LOG_ONLY"
      APIFW_LOG_FORMAT: "JSON"
      APIFW_LOG_LEVEL: "INFO"  # could be INFO, ERROR, WARNING or DEBUG
    volumes:
      - ./nginx/www-root/openapi.json:/opt/resources/openapi.json:ro
    stop_grace_period: 1s
    networks:
      - es
    depends_on:
      - es8

  nginx:
    restart: always
    build: ./nginx
    ports:
      - 443:443      
    volumes:
      - ./nginx/www-root:/www-root/
    depends_on:
      - es8
    networks:
      - es

  es8:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.0.0-alpha1
    container_name: es8
    restart: always
    environment:
      - cluster.name=swarmee
      - node.name=swarmee01
      - discovery.seed_hosts=swarmee01
      - cluster.initial_master_nodes=swarmee01
      - http.cors.enabled=true
      - http.cors.allow-credentials=true
      - http.cors.allow-origin="*"
      - http.cors.allow-headers="X-Requested-With, X-Auth-Token, Content-Type, Content-Length, Authorization, Access-Control-Allow-Headers, Accept"
      - bootstrap.memory_lock=true # along with the memlock settings below, disables swapping
      - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m" # minimum and maximum Java heap size, recommend setting both to 50% of system RAM
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536 # maximum number of open files for the OpenSearch user, set to at least 65536 on modern systems
        hard: 65536
    ports:
      - 9200:9200
    networks:
      - es

#  kibana8:
#    container_name: kibana8
#    image: docker.elastic.co/kibana/kibana:8.0.0-alpha1
#    environment:
#      ELASTICSEARCH_HOSTS: '["http://es8:9200"]'
#    ports:
#      - 5601:5601
#    networks:
#      - es

networks:
  es:

